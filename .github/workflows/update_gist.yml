name: Aggiorna Gist con uscite giornaliere

on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Installa solo jq per gestire JSON via shell
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Installa le dipendenze Playwright per il sistema
      - name: Install Playwright system dependencies
        run: npx playwright install-deps

      # Installa le dipendenze Node.js del progetto
      - name: Install npm dependencies
        run: npm install

      # Installa i browser di Playwright (Chromium, Firefox, WebKit)
      - name: Install Playwright browsers
        run: npx playwright install

      # Esegui lo script Node.js per raccogliere i giochi
      - name: Run script
        run: |
          node script.js || { echo 'Script fallito'; exit 1; }

      # Carica i file partizionati nei Gist
      - name: Upload parts to Gists
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GIST_TOKEN }}
        run: |
          # Usa un ciclo per caricare ogni parte
          for i in {1..6}  #
          do
            FILE_NAME="games_part_${i}.json"
            if [ -f "$FILE_NAME" ]; then
              # Creiamo il JSON direttamente come stringa per il contenuto
              CONTENT=$(cat "$FILE_NAME" | jq -c .)

              # Carica il file nel Gist
              RESPONSE=$(curl -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -d "{\"files\": {\"$FILE_NAME\": {\"content\": \"$CONTENT\"}}}" \
                https://api.github.com/gists)

              echo "Gist creato per $FILE_NAME"
            fi
          done
